## Dovecot configuration file

# If you're in a hurry, see http://wiki.dovecot.org/QuickConfiguration

# "doveconf -n" command gives a clean output of the changed settings. Use it
# instead of copy&pasting files when posting to the Dovecot mailing list.

# '#' character and everything after it is treated as comments. Extra spaces
# and tabs are ignored. If you want to use either of these explicitly, put the
# value inside quotes, eg.: key = "# char and trailing whitespace  "

# Default values are shown for each setting, it's not required to uncomment
# those. These are exceptions to this though: No sections (e.g. nmesp
# or plugin settings are added by default, they're listed only as examples.
# Paths are also just examples with the real defaults being based on configure
# options. The paths listed here are for configure --prefix=/usr
# --sysconfdir=/opt/afterlogic/etc --localstatedir=/opt/afterlogic/var

default_internal_user = afterlogic
default_login_user = afterlogic

# Protocols we want to be serving.
protocols = imap pop3 lmtp

# ssl_protocols = !SSLv3 !SLv2

# A comma separated list of IPs or hosts where to listen in for connections. 
# "*" listens in all IPv4 interfaces, "::" listens in all IPv6 interfaces.
# If you want to specify non-default ports or anything more complex,
# edit conf.d/master.conf.
listen = *, ::

# Base directory where to store runtime data.
base_dir = /opt/afterlogic/var/run/dovecot/

# Greeting message for clients.
login_greeting = Afterlogic IMAP ready.

# Space separated list of trusted network ranges. Connections from these
# IPs are allowed to override their IP addresses and ports (for logging and
# for authentication checks). disable_plaintext_auth is also ignored for
# these networks. Typically you'd specify your IMAP proxy servers here.
# login_trusted_networks =

# Sepace separated list of login access check sockets (e.g. tcpwrap)
# login_access_sockets = 

# Show more verbose process titles (in ps). Currently shows user name and
# IP address. Useful for seeing who are actually using the IMAP processes
# (eg. shared mailboxes or if same uid is used for multiple accounts).
verbose_proctitle = yes

# Should all processes be killed when Dovecot master process shuts down.
# Setting this to "no" means that Dovecot can be upgraded without
# forcing existing client connections to close (although that could also be
# a problem if the upgrade is e.g. because of a security fix).
shutdown_clients = yes

# If non-zero, run mail commands via this many connections to doveadm server,
# instead of running them directly in the same process.
# doveadm_worker_count = 0
# UNIX socket or host:port used for connecting to doveadm server
# doveadm_socket_path = doveadm-server

log_timestamp = "%Y-%m-%d %H:%M:%S "

auth_default_realm = localhost 

##
## Dictionary server settings
##

# Dictionary can be used to store key=value lists. This is used by several
# plugins. The dictionary can be accessed either directly or though a
# dictionary server. The following dict block maps dictionary names to URIs
# when the server is used. These can then be referenced using URIs in format
# "proxy::<name>".

dict {
  userquotadict = mysql:/etc/dovecot/dovecot-user-quota-dict.conf
  expire = mysql:/etc/dovecot/dovecot-sql.conf
}

service quota-warning {
  executable = script /opt/afterlogic/scripts/send_mail_warnquota_en.sh
  user = afterlogic
  unix_listener quota-warning {
    user = afterlogic
  }
}

service indexer-worker {
  user = root
  vsz_limit = 768 M
}

service decode2text {
  # attachments decoder service
  executable = script /opt/afterlogic/libexec/dovecot/decode2text.sh
  user = afterlogic
  unix_listener decode2text {
    mode = 0666
  }
}

# A config file can also tried to be included without giving an error if
# it's not found:
!include_try /etc/dovecot/local.conf

#mail_plugins = listescape fts fts_solr virtual quota expire mail_log notify
mail_plugins = listescape fts virtual quota  mail_log notify

# Most of the actual configuration gets included below. The filenames are
# first sorted by their ASCII value and parsed in that order. The 00-prefixes
# in filenames are intended to make it easier to understand the ordering.
!include conf.d/*.conf

mail_location = maildir:/opt/afterlogic/data/%d/%n:INDEX=MEMORY
mail_home = /opt/afterlogic/data/%d/%n

namespace {
  location = maildir:/opt/afterlogic/data/%d/%n
  type = private
  separator = /
  prefix = 
  inbox = yes

  # mailbox Sent\ Items {
  #   auto = subscribe
  #   special_use = \Sent\ Items
  # }

  mailbox Sent {
    auto = subscribe
    special_use = \Sent
  }

  mailbox Drafts {
    auto = subscribe
    special_use = \Drafts
  }

  mailbox Trash {
    auto = subscribe
    special_use = \Trash
  }
        
  # mailbox Spam {
  #   auto = subscribe
  #   special_use = \Spam
  # }

  # mailbox INBOX {
  #   auto = subscribe
  #   special_use = \INBOX
  # }
}

# a virtual namespace creating the "union" folder for global search
# namespace {
#   location = virtual:/opt/afterlogic/data/virtual/:LAYOUT=maildir++:INDEX=/opt/afterlogic/data/indexes/
#   type = private
#   separator = /
#   prefix = All/
#   list = no
#   hidden = yes
#   inbox = no
#   subscriptions = yes
# }

# public namespace, visible for all users
# namespace {
#   location = maildir:/opt/afterlogic/data/public
#   type = public
#   separator = /
#   prefix = Pub/
#   subscriptions = yes
#   list = yes
#   hidden = no
#   inbox = no
# }

plugin {
  # Events to log. Defined in src/plugins/mail-log/mail-log-plugin.c - also available: flag_change save mailbox_create
  mail_log_events = delete undelete expunge copy mailbox_delete mailbox_rename

  # Also available: Defined in src/plugins/mail-log/mail-log-plugin.c - flags vsize from subject
  mail_log_fields = uid box msgid size from subject

  # autocreate plugin
  # autocreate = "Trash"
  # autocreate2 = "Spam"
  # autocreate3 = "Sent Items"
  # autocreate4 = "Drafts"
  # autosubscribe = "Trash"
  # autosubscribe2 = "Spam"
  # autosubscribe3 = "Sent Items"
  # autosubscribe4 = "Drafts"
  # quota plugin
  # Default quota - mailbox size 1 Gb,
  # max 1000 email messages in account
  # This quota is replaced by one found in the database
  quota  = dict:User quota::proxy::userquotadict
  
  # quota2 = dict::%d:proxy::domainquotadict
  # tenant quota is retrieved from the database -- no need
  # in quota def for tenant-less domains and users
  # quota3 = dict::default:proxy::tenantquotadict
  quota_rule  = *:storage=100G
  
  # quota_rule2 = Trash:storage=+20%%
  # quota_rule3 = Spam:ignore
  quota_rule4 = Sent:storage=+1M
  quota_warning  = storage=100%% quota-warning 100 %u
  quota_warning2   = storage=99%% quota-warning 99 %u
  quota_warning3  = storage=95%% quota-warning 95 %u
  quota_warning4  = storage=80%% quota-warning 80 %u

  # expire = Trash 30
  # expire2 = Trash/* 30
  # expire3 = Spam 30
  expire_dict = proxy::expire

  # fts plugin settings
  # fts = lucene
  # fts = squat
  # fts = solr
  # fts_solr = break-imap-search url=http://localhost:8983/solr/
  # fts_decoder = decode2text
  # fts_squat = partial=4 full=10
  # fts_lucene = whitespace_chars=@.

  # fts = solr
  # fts_solr = break-imap-search url=http://localhost:8983/solr/
  # fts_decoder = decode2text
  # fts_autoindex = yes
  # fts_autoindex_max_recent = 100000
}

# mail_debug=yes

# passdb {
#   args = /opt/afterlogic/etc/dovecot/dovecot-sql.conf
#   driver = sql
# }

# userdb {
#  driver = static
#  args = uid=502 gid=502 home=/home/%d/%n
#  driver = passwd
# }


userdb {
  driver = sql
  args = /etc/dovecot/dovecot-sql.conf
}

passdb {
  driver = sql
  args = /etc/dovecot/dovecot-sql.conf
}

mail_uid = afterlogic
mail_gid = afterlogic

# auth_debug=yes

service auth {
  # executable = /opt/afterlogic/scripts/dovecot-imap.sh
  # .. passdb and userdb configuration ..
  unix_listener auth-client {
    user = afterlogic
    group = afterlogic
    mode = 0600
  }

  # deliver and some other programs need also auth-master:
  unix_listener auth-master {
    user = afterlogic 
    group = afterlogic
    mode = 0600
  }
}

# ssh command line used in dsync replication (ssh port added)
#
# dsync_remote_cmd = ssh -p 1234 -l%{login} %{host} doveadm dsync-server -u%u -l%{lock_timeout} -n%{namespace}
 
## --- DSYNC REPLICATION ----------------------------------------
#
# aggregator, replicator, doveadm, and config needed, and
# dsync_remote_cmd if running ssh via non-default port
#
# service aggregator {
#   give enough permissions for mail processes
#
#   fifo_listener replication-notify-fifo {
#     user = exim
#     mode = 0600
#   }
#   unix_listener replication-notify {
#     user = exim
#     mode = 0600
#   }
# }
# service replicator {
#   start replication at startup
#
#   process_min_avail = 1
# }

service doveadm {
# if you're using a single virtual user, set this to start ssh as vmail 
# (not root)
  user = afterlogic
}
service config {
# needed to grant access to /var/run/dovecot/config for service doveadm
#
  unix_listener config {
    user = afterlogic 
  }
}
