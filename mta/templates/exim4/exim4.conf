freeze_tell = root@your_domain
primary_hostname = your_domain

#hide mysql_servers = localhost::(/var/lib/mysql/mysql.sock)/afterlogic/afterlogic/#mypassword#
hide mysql_servers = localhost::(/var/run/mysqld/mysqld.sock)/afterlogic/afterlogic/#mypassword#
####
QUOTA_NEW = SELECT quota FROM awm_accounts WHERE email = '${quote_mysql:$local_part}@${quote_mysql:$domain}' or email='${quote_mysql:$local_part}' LIMIT 1
DEFAULT_QUOTA_LIMIT = 0
#############

MYSQL_ALIASES = select alias_to from awm_mailaliases where alias_name='${quote_mysql:$local_part}' AND alias_domain='${quote_mysql:$domain}'
MYSQL_ML = SELECT list_to FROM awm_mailinglists WHERE list_name='${quote_mysql:$local_part}@${quote_mysql:$domain}'
#MYSQL_FORWARDS = SELECT forward_to FROM awm_mailforwards WHERE forward_name='$local_part' AND forward_domain='$domain'

MYSQL_USER = SELECT distinct awm_accounts.email as login FROM awm_accounts INNER JOIN awm_domains ON awm_accounts.id_domain = awm_domains.id_domain WHERE  (awm_accounts.email = CONCAT('${quote_mysql:$local_part}', '@', '${quote_mysql:$domain}') OR awm_accounts.email = '${quote_mysql:$local_part}') AND awm_domains.name = '${quote_mysql:$domain}' AND awm_accounts.deleted = 0;

#MYSQL_DISABLED_USER = SELECT email FROM awm_accounts  where email = '$local_part@$domain' AND deleted = 1

#MYSQL_ALIASE_AND_USER_CHECK = SELECT distinct awm_accounts.email as login FROM awm_accounts INNER JOIN awm_domains ON awm_accounts.id_domain = awm_domains.id_domain WHERE  (awm_accounts.email = CONCAT('$local_part', '@', '$domain') OR awm_accounts.email = '$local_part') AND awm_domains.name = '$domain' AND awm_domains.is_internal = 1 AND awm_accounts.deleted = 0;

DKIM_FILE                       = /opt/afterlogic/etc/ssl-certs/dk.key
DKIM_PRIVATE_KEY                = ${if exists{DKIM_FILE}{DKIM_FILE}{0}}
DKIM_DOMAIN = ${lc:${domain:$h_from:}}

domainlist local_domains = ${lookup mysql{SELECT name FROM awm_domains WHERE name = '${quote_mysql:$domain}'}}

domainlist relay_to_domains = 
hostlist   relay_from_hosts = localhost:127.0.0.0/8

acl_smtp_rcpt = acl_check_rcpt
acl_smtp_data = acl_check_data

#av_scanner = clamd:/opt/afterlogic/var/spool/clamav/clamd.sock
spamd_address = 127.0.0.1 783

##### LOCAL_CHECKS
local_from_check = true

allow_mx_to_ip = true
exim_user = afterlogic
exim_group = afterlogic

#root deny
never_users = root

sender_unqualified_hosts = +relay_from_hosts
recipient_unqualified_hosts = +relay_from_hosts

ignore_bounce_errors_after = 45m
timeout_frozen_after = 15d

auto_thaw = 1h

daemon_smtp_ports = 25:465

# greeting
smtp_banner = "ESMTP MAIL service ready at $primary_hostname"
smtp_accept_max = 1000
smtp_accept_max_per_connection = 21
smtp_accept_max_per_host = 21
smtp_connect_backlog = 10

#smtp_accept_reserve = 150

split_spool_directory = true
remote_max_parallel = 25

#limit mailer daemon
return_size_limit = 70k

# message max size
message_size_limit = 120M

helo_allow_chars = ._
smtp_enforce_sync = true
log_file_path = /opt/afterlogic/var/log/exim/exim%s.log

log_selector = \
  +all_parents \
  +connection_reject \
  +incoming_interface \
  +lost_incoming_connection \
  +received_sender \
  +received_recipients \
  +smtp_confirmation \
  +smtp_syntax_error \
  +smtp_protocol_error \
  -queue_run \
  +tls_peerdn

syslog_timestamp = yes

######################## Exim TLS
#tls_advertise_hosts = *
#tls_on_connect_ports = 465

#tls_certificate=/opt/afterlogic/etc/ssl-certs/.crt
#tls_verify_certificates = /opt/afterlogic/etc/ssl-certs/.ca-bundle
#tls_privatekey=/opt/afterlogic/ssl/certs/.key

#tls_require_ciphers = ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA

#openssl_options = +no_sslv2 +no_sslv3
# Macro to call the mysql function that returns 'yes' if the mail should be deferred:
#GREYLIST_DEFER = SELECT greylist_defer('${quote_mysql:$sender_address_domain}', '${quote_mysql:$sender_host_address}')
### incoming ACL 
begin acl

acl_check_rcpt:
# accept  hosts = :

# disables user
# SELECT email FROM awm_accounts where email = 'disable@afterlogic.com' and deleted = 1;


# deny    domains   = +local_domains
# condition = ${if eq{}{${lookup mysql{ MYSQL_USER }}} \
#   {${if eq{}{${lookup mysql{ SELECT email FROM awm_accounts \
#   where email = '$local_part@$domain' AND deleted = 1 }}} \
#   {no}{yes} }}{no} }
# message   = "Sorry your message cannot be delivered. This account has been or discontinued."
#


# deny    domains = !+local_domains
# message = "You are not allowed to send mail out"
# senders = /usr/local/etc/exim/sender_local_domain.list
# senders = /opt/afterlogic/etc/exim/sender_local_domain.list

#f1
##  deny  domains   = +local_domains
##        condition = ${if eq{}{${lookup mysql{ MYSQL_USER }}} \
##              {${if eq{}{${lookup mysql{  SELECT name FROM awm_domains \
##              WHERE name = '${sender_address_domain}' AND is_internal = 1 }}} \
##              {no}{yes} }}{no} }
##
##  condition = ${if eq{}{${lookup mysql{ MYSQL_ALIASES }}} \
##             {${if eq{}{${lookup mysql{  SELECT name FROM awm_domains \
##              WHERE name = '${sender_address_domain}' AND is_internal = 1 }}} \
##              {no}{yes} }}{no} }
##          message   = "There is no requested mailbox"
##          # verify  = recipient/callout = no_cache
#f1/


#all@afterlogic.com
deny  log_message =  $sender_address is not permitted to send to this recipient 
      recipients   = all@afterlogic.com
      ! senders   = afterlogic.com:afterlogic.org



accept authenticated = *
  # For the rest, the domain of the recipient address
  # must be my public domain. (no relay) 
require
  log_message = no relay.
  domains     = +local_domains
  hosts       =  * : !+relay_from_hosts

# deny  log_message   = "Sender is BlackListed - $dnslist_domain --> $dnslist_text"
#       dnslists      = cbl.abuseat.org : \
#                       bl.csma.biz : \
#                       dynablock.njabl.org : \
#                       zen.spamhaus.org : \
#                       bl.spamcop.net : \
                                                       
deny  log_message   = "Incorrect Sender! - spambot-net"
      domains       = *.hinet.net:*.com.tw:*.com.sg:hinet:pussy:nigger:fuck:ebtnet.net:hinet.net:xuite.net:xuite:sh.cn:*.sh.cn

deny  log_message   = "incorrect symbols in address"
      domains       = +local_domains
      local_parts   = ^[.] : ^.*[@%!/|]

deny  log_message   = "incorrect symbols in address"
      domains       = !+local_domains
      local_parts   = ^[./|] : ^.*[@%!] : ^.*/\\.\\./

accept  local_parts = postmaster
        domains     = +local_domains

deny  log_message   = "HELO/EHLO is required by SMTP"
      condition     = ${if eq{$sender_helo_name}{}{yes}{no}}

deny  condition     = ${if match{$sender_helo_name}\
                      {\N^\d+$\N}{yes}{no}}
      hosts         = !127.0.0.1 : !localhost : *
      log_message   = "There is numbers only in HELO! RFC mismatch..."

# Defer if GREYLIST_DEFER is 'yes':
# defer   condition = ${lookup mysql{GREYLIST_DEFER}}
# message   = Now greylisted - please try again in ten minutes.

# deny  condition   = ${if eq{$sender_address}{}{yes}{no}}
#       hosts       = !127.0.0.1 : !localhost : *
#       message     = "Where sender of this mail?!"

############################################ rate limit
# Log all senders' rates
warn
  ratelimit   = 0 / 1h / strict
  log_message = Sender rate $sender_rate / $sender_rate_period
    
# Slow down fast senders; note the need to truncate $sender_rate
# at the decimal point.
warn
  ratelimit   = 100 / 1h / per_rcpt / strict
  delay       = ${eval: ${sg{$sender_rate}{[.].*}{}} - \
                $sender_rate_limit }s
                        
# Keep authenticated users under control
warn
  authenticated = *
  ratelimit = 1000 / 1d / strict / $authenticated_id
                        
# System-wide rate limit
defer
  message = Sorry, too busy. Try again later.
  ratelimit = 100 / 1s / $primary_hostname
############################################ rate limit

accept authenticated = *

#ff
deny  condition = ${if eq{}{${lookup mysql{ MYSQL_USER }}} \
                  {${if eq{}{${lookup mysql{ SELECT email FROM awm_accounts \
                  where email = '$local_part@$domain' AND deleted = 1 }}} \
                  {no}{yes} }}{no} }
      message   = "This user is disabled."


accept  domains = +local_domains
        endpass
        message = "There is no requested mailbox 2"
        verify  = recipient/callout = no_cache

accept  domains = +local_domains
        endpass
        message = "There is no requested mailbox 2"
        verify  = recipient/callout = no_cache

accept  domains = +relay_to_domains
        endpass
        message = "Mailserver knows nothing about relay to this address"
        verify  = recipient/callout = no_cache

# deny  log_message = "Sender is BlackListed - $dnslist_domain --> $dnslist_text"
#          dnslists = cbl.abuseat.org : \
#                     bl.csma.biz : \
#                     dynablock.njabl.org : \
#                     zen.spamhaus.org : \
#                     bl.spamcop.net : \ 

accept  hosts       = +relay_from_hosts

deny    log_message = "Relay is not permitted"

# f2
# Email address validity check for external clients
deny  log_message   = Invalid sender
      !authenticated = *
      !verify       = sender/callout=20s,defer_ok,maxwait=30s
#

accept

# Mail Body ACL //comment it out to allow all

acl_check_data:
# accept condition     = ${if match{$skip_data_filter} {on|true|1} {yes}{}}
accept condition     = ${if match{$local_part} {support|notices|projects|postmaster|sales} {yes}{}}


# deny malware = *
# message = "[VIRUS DETECTED] - $malware_name"

####################################################################
# SPAM CHECK GOES HERE

accept condition     = ${if match{$local_part} {support|notices|projects|postmaster|sales} {yes}{}}

# Accept outgoing messages from authenticated users, no need to scan as spam
accept  authenticated = *

# Skip scanning messages from users that are trusted
accept  hosts = +relay_from_hosts

# accept  domains       = +local_domains
#         endpass

# Skip if message over size
accept condition = ${if > {$message_size}{20m} }

# Pass the email via Spamassassin and don't scan messages over the specified size to save CPU
# Append the X-Spam-Score and X-Spam-Report for all messages
# warn  message = X-Spam-Score: $spam_score

warn  message = X-Spam-Score: $spam_score_int
      condition = ${if < {$message_size}{20m} }
      # hosts = ! +relay_from_hosts
      # spam = afterlogic:true/defer_ok
      spam = afterlogic:true

# warn spam = spam/defer_ok
warn  spam = afterlogic:true
      condition = ${if > {$spam_score_int}{39}}
      add_header = X-Spam-Flag: YES

warn  message = X-Spam-Report: $spam_report
      condition = ${if < {$message_size}{20m} }
      # hosts = ! +relay_from_hosts
      # spam = afterlogic:true/defer_ok
      spam = afterlogic:true

warn  message = This message is marked as SPAM by the Anti-Spam System. Spam-score too high : $spam_score spam points - Please reformat your email and send again
      spam = afterlogic:true
      # spam = afterlogic:true/defer_ok
      # hosts = ! +relay_from_hosts
      condition = ${if < {$message_size}{20m} }
      condition = ${if > {$spam_score_int}{39}{1}{0}}

# deny  message = DKIM Header isn't good
#       condition = ${if match{${lookup dkim{$sender_address_domain}}}{bad}{1}{0}}

####################################################################

accept

###### ROUTERS

begin routers


dnslookup:
  driver = dnslookup
  domains = ! +local_domains
  transport = remote_smtp
  ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8
  no_more

# disable:
# driver = fail
# condition = ${if eq{}{${lookup mysql{ MYSQL_USER }}} \
#             {${if eq{}{${lookup mysql{ SELECT email FROM awm_accounts \
#             where email = '$local_part@$domain' AND deleted = 1 }}} \
#             {no}{yes} }}{no} }
# message   = "Sorry your message cannot be delivered. This account has been disabled or discontinued."
# no_more

mailing_lists:
  driver = redirect
  allow_fail
  allow_defer
  data = ${lookup mysql{ MYSQL_ML }}

system_aliases:
  driver = redirect
  allow_fail
  allow_defer
  data = ${lookup mysql{ MYSQL_ALIASES }}
  user = afterlogic
  group = afterlogic
  file_transport = address_file
  pipe_transport = address_pipe

userforward:
  driver = redirect
  allow_filter
  user = afterlogic
  group = afterlogic
  sieve_vacation_directory = /opt/afterlogic/data/${domain}/${local_part}/filters
  file = /opt/afterlogic/data/${domain}/${local_part}/filters/${readfile{/opt/afterlogic/data/${domain}/${local_part}/filters/active_script}{}}
  no_verify
  no_expn
  check_ancestor
  # file_transport = local_delivery
  file_transport = dovecot_delivery
  pipe_transport = address_pipe
  reply_transport = address_reply
  condition = ${if exists{/opt/afterlogic/data/${domain}/${local_part}/filters/active_script}{yes}{no}}


uservacation:
  driver = redirect
  allow_filter
  hide_child_in_errmsg
  ignore_eacces
  ignore_enotdir
  reply_transport = vacation_reply
  no_verify
  require_files = /opt/afterlogic/data/${domain}/${local_part}/vacation.msg
  file = /opt/afterlogic/data/${domain}/${local_part}/vacation.msg
  user = afterlogic
  group = afterlogic
  unseen
  condition = ${if exists{/opt/afterlogic/data/${domain}/${local_part}/vacation.msg} {yes} {no} }


uservacation_new:
  driver = redirect
  allow_filter
  hide_child_in_errmsg
  ignore_eacces
  ignore_enotdir
  reply_transport = vacation_reply
  no_verify
  require_files = /opt/afterlogic/data/${domain}/${local_part}/filters/vacation.msg
  file = /opt/afterlogic/data/${domain}/${local_part}/filters/vacation.msg
  user = afterlogic
  group = afterlogic
  unseen
  condition = ${if exists{/opt/afterlogic/data/${domain}/${local_part}/filters/vacation.msg} {yes} {no} }

inactiv:
driver = redirect
condition = ${if eq{}{${lookup mysql{ MYSQL_USER }}} \
            {${if eq{}{${lookup mysql{ SELECT email FROM awm_accounts \
            where email = '$local_part@$domain' AND deleted = 1 }}} \
            {no}{yes} }}{no} } 
allow_fail = yes
data = :fail: User disabled
no_more

rcpt_check_router:
  driver = redirect
  allow_fail
  no_verify
  data = "${if eq{}{${lookup mysql{ MYSQL_USER }}}{:fail: Unknown local user!}{$local_part@$domain} }"

localuser:
  driver = accept
  domains = +local_domains
  transport = dovecot_delivery
  # condition = ${if eq{} {${lookup mysql{ MYSQL_USER }}}{no}{yes} }

# cannot_route_message = Unknown local user
# condition = ${if eq{}{${lookup mysql{ MYSQL_USER }}}{no}{yes} }

# localuser:
#   driver = accept
#   domains = +local_domains
#   transport = dovecot_delivery
#   cannot_route_message = Unknown local user
#   condition = ${if eq{}{${lookup mysql{ MYSQL_USER }}}{no}{yes} }

# spamcheck_router:
#   no_verify
#   check_local_user
#   # When to scan a message :
#   #   -   it isn't already flagged as spam
#   #   -   it isn't already scanned
#   condition = ${if > {$spam_score_int}{44}}
#   #condition = "${if and { {!def:h_X-Spam-Flag:} {!eq {$received_protocol}{spam-scanned}}} {1}{0}}"
#   driver = accept
#   transport = spamcheck

###### TRANSPORTS

begin transports

remote_smtp:
  driver = smtp
  dkim_domain           = DKIM_DOMAIN
  headers_remove = Received
  # mail.afterlogic.com
  dkim_selector         = mail
  dkim_private_key      = DKIM_PRIVATE_KEY
  user = afterlogic
  group = afterlogic 
  interface = 0.0.0.0

# remote_smtp:
#   driver = smtp
#   user = afterlogic
#   group = afterlogic

local_delivery:
  driver = appendfile

  delivery_date_add

  directory = /opt/afterlogic/data/${domain}/${local_part}/\
              ${if def:h_X-Spam-Flag {.Spam}{${sg{${sg{/${address_file}}{/+}{.}}}{(?i)^.inbox}{}}}}
  directory_mode = 770
  mode = 0660

  envelope_to_add

  # user = ${lookup{$domain}lsearch{/opt/afterlogic/data/$domain/realm_user}}
  user = afterlogic
  group = afterlogic

  maildir_format

  quota = ${lookup mysql{ QUOTA_NEW }{${value}K}{DEFAULT_QUOTA_LIMIT}}
  maildir_quota_directory_regex = ^(?:cur|new|.*)$
  maildir_tag = ,S = $message_size
  quota_size_regex = ,S=(\d+)$

  quota_warn_threshold = 80%
  quota_warn_message  = "\
To: $local_part@$domain\n\
Subject:Your mailbox at $domain server is almost full.\n\n\
This message was created automatically by mail delivery software at $domain.\n\n\
The size of your mailbox has exceeded the warning threshold set by the System.\n\
Administrator (80%).\n\n\
To avoid possible rejection of incoming mail in the near future, please remove\n\
some e-mails from your mailbox, or contact your System Administrator to.\n\
increase quota value for your mailbox.\n\n\
* $domain\n"

  maildir_use_size_file
  no_quota_is_inclusive

#############

dovecot_delivery:
  driver = pipe
  # command = /opt/afterlogic/libexec/dovecot/deliver -d $local_part@$domain -f $sender_address -a $original_local_part@$original_domain
  # command = /opt/afterlogic/scripts/dovecot-lda-wrapper.sh -d $local_part@$domain -f '${if eq{${sender_address}}{}{exim@localhost}{${sender_address}}}' -a $original_local_part@$original_domain
  command = "/opt/afterlogic/scripts/dovecot-lda.sh"
  message_prefix =
  message_suffix =
  log_output
  delivery_date_add
  envelope_to_add
  return_path_add
  user = afterlogic
  group = afterlogic
  temp_errors = 64 : 69 : 70 : 71 : 72 : 73 : 74 : 75 : 78

address_pipe:
  driver = pipe
  return_output

address_file:
  driver = appendfile
  delivery_date_add
  envelope_to_add
  return_path_add

address_reply:
  driver = autoreply

vacation_reply:
  driver = autoreply

# spamcheck:
#   debug_print = "T: spamassassin_pipe for $local_part@$domain"
#   driver = pipe
#   command = /opt/afterlogic/bin/exim -oMr spam-scanned -bS
#   use_bsmtp
#   transport_filter = /usr/bin/spamc -u $local_part
#   home_directory = "/opt/afterlogic/tmp"
#   current_directory = "/opt/afterlogic/tmp"
#   user = afterlogic
#   group = afterlogic
#   return_fail_output
#   message_prefix =
#   message_suffix =

##### RETRY UNSENDED CORRESPONDENCE
begin retry

# Address or Domain  Error   Retries
# -----------------  -----   -------
*                      quota
*                    *       F,2h,15m; G,16h,1h,1.5; F,4d,6h

############### quota retries
*@localhost     quota
*                           quota           F,3h,15m;

######################################################################
#                   AUTHENTICATION CONFIGURATION                     #
######################################################################

begin authenticators

AUTHDAEMON_SOCKET = /opt/afterlogic/var/run/dovecot/auth-master

login:
  driver = dovecot
  public_name = LOGIN
  server_socket = /opt/afterlogic/var/run/dovecot/auth-client
  server_set_id = $1

# PLAIN authenticator
plain:
  driver = dovecot
  public_name = PLAIN
  server_socket = /opt/afterlogic/var/run/dovecot/auth-client
  server_set_id = $2

